# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'raw_ui/dialog_createSubProject.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import numpy as np, pandas as pd, datetime, time, json, os
from classes.dialog_createSubField import Ui_Dialog_createSubField


class Ui_Dialog_createSubProject(object):
    def setupUi(self, Dialog_createSubProject, name_project):
        Dialog_createSubProject.setObjectName("Dialog_createSubProject")
        Dialog_createSubProject.resize(374, 204)
        self.buttonBox = QtWidgets.QDialogButtonBox(Dialog_createSubProject)
        self.buttonBox.setGeometry(QtCore.QRect(190, 160, 161, 32))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.label_3 = QtWidgets.QLabel(Dialog_createSubProject)
        self.label_3.setGeometry(QtCore.QRect(20, 50, 47, 13))
        self.label_3.setObjectName("label_3")
        self.textEdit_name = QtWidgets.QTextEdit(Dialog_createSubProject)
        self.textEdit_name.setGeometry(QtCore.QRect(70, 20, 281, 21))
        self.textEdit_name.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textEdit_name.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textEdit_name.setObjectName("textEdit_name")
        self.textEdit_name.setTabChangesFocus(True)
        self.textEdit_goal = QtWidgets.QTextEdit(Dialog_createSubProject)
        self.textEdit_goal.setGeometry(QtCore.QRect(70, 47, 281, 61))
        self.textEdit_goal.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textEdit_goal.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textEdit_goal.setObjectName("textEdit_goal")
        self.textEdit_goal.setTabChangesFocus(True)
        self.label = QtWidgets.QLabel(Dialog_createSubProject)
        self.label.setGeometry(QtCore.QRect(20, 23, 47, 13))
        self.label.setObjectName("label")
        self.comboBox_field = QtWidgets.QComboBox(Dialog_createSubProject)
        self.comboBox_field.setGeometry(QtCore.QRect(70, 120, 191, 22))
        self.comboBox_field.setObjectName("comboBox_field")
        self.label_2 = QtWidgets.QLabel(Dialog_createSubProject)
        self.label_2.setGeometry(QtCore.QRect(20, 123, 47, 13))
        self.label_2.setObjectName("label_2")
        self.pushButton_newField = QtWidgets.QPushButton(Dialog_createSubProject)
        self.pushButton_newField.setGeometry(QtCore.QRect(274, 120, 81, 25))
        self.pushButton_newField.setObjectName("pushButton_newField")

        self.retranslateUi(Dialog_createSubProject)
        self.buttonBox.accepted.connect(Dialog_createSubProject.accept)
        self.buttonBox.accepted.connect(self.submit)
        self.buttonBox.rejected.connect(Dialog_createSubProject.reject)
        QtCore.QMetaObject.connectSlotsByName(Dialog_createSubProject)

        self.new_subProject_name = ''
        self.new_subProject_goal = ''
        self.new_subProject_field = ''

        self.name_project = name_project

        self.new_field = None
        self.init_combo_field()

        self.pushButton_newField.clicked.connect(self.create_new_field)

    def retranslateUi(self, Dialog_createSubProject):
        self._translate = QtCore.QCoreApplication.translate
        Dialog_createSubProject.setWindowTitle(self._translate("Dialog_createSubProject", "Create New Sub Project"))
        self.label_3.setText(self._translate("Dialog_createSubProject", "Goal:"))
        self.label.setText(self._translate("Dialog_createSubProject", "Name:"))
        self.label_2.setText(self._translate("Dialog_createSubProject", "Field:"))
        self.pushButton_newField.setText(self._translate("Dialog_createSubProject", "New Sub Field"))

    def submit(self):
        self.new_subProject_name = self.textEdit_name.toPlainText()
        self.new_subProject_goal = self.textEdit_goal.toPlainText()
        self.new_subProject_field = self.comboBox_field.currentText()

    def get_full_dict(self, name_project):
        print('loading dic',name_project)
        with open('data/{}.json'.format(name_project.replace(' ','_')),'r') as f:
            dic = json.load(f)
            f.close()
        return dic

    def get_list_field(self):
        # get all field
        name_project = self.name_project
        dic = self.get_full_dict(name_project)
        # get all field
        list_field = []
        for key,item in dic['sub_projects'].items():
            list_field.append(item['field'])
        list_field = list(np.unique(np.array(list_field)))
        return list_field

    def init_combo_field(self):
        self.comboBox_field.clear()
        list_field = self.get_list_field()
        for field in list_field:
            self.comboBox_field.addItem("")
            self.comboBox_field.setItemText(self.comboBox_field.count()-1, self._translate("MainWindow", str(field)))


    def create_new_field(self):
        print('openning dialog create sub project')
        dialog = QtWidgets.QDialog()
        ui = Ui_Dialog_createSubField() # place dialog object here
        ui.setupUi(dialog)
        dialog.show()
        rsp = dialog.exec_()
        if rsp == QtWidgets.QDialog.Accepted:
            self.new_field = ui.textEdit.toPlainText()
            self.comboBox_field.addItem("")
            self.comboBox_field.setItemText(self.comboBox_field.count()-1, self._translate("MainWindow", str(self.new_field)))
            self.comboBox_field.setCurrentText(self.new_field)
        else:
            print('dialog for new sub project have been closed') 


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog_createSubProject = QtWidgets.QDialog()
    ui = Ui_Dialog_createSubProject()
    ui.setupUi(Dialog_createSubProject)
    Dialog_createSubProject.show()
    sys.exit(app.exec_())
